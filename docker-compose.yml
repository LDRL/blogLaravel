version: "3.7" #version del docker-compose(?)
services: 
  nginx: # 1er servicio: nginx
    image: nginx:stable-alpine # imagen de docker hub que vamos a usar
    container_name: nginx-blog # nombre para referirse al servicio
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./blog:/var/www/html # carpeta local/ vincula a carpeta de nginx
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # archivo local / reflejado en archivo de la imagen
    depends_on: # para correr este servicio debe estar corriendo php y mysql antes
      - php
      - mysql_db
    networks: # la red que los conecta se llama laravel
      - laravel

  mysql_db: # 2do servici
    image: mysql:5.7 # imagen de docker hub
    restart: unless-stopped # si tiene algun problema, reinicialo
    tty: true # aqui si le fallo joven xD, ðŸ‘€ leo los comentarios
    ports: 
      - 3306:3306 # puerto local:puerto del servicio
    volumes:
      - ./mysql:/var/lib/mysql # carpeta local:carpeta de config de mysql
    environment: # datos de configuracion del entorno
      MYSQL_DATABASE: blog_laravel
      MYSQL_ROOT_PASSWORD: root
    networks:
      - laravel # red

  php: # 3er servicio
    build: # este se construira aqui mismo
      context: . # ruta de referencia ./
      dockerfile: Dockerfile # nombre del archivo de configuracion de la imagen 
    container_name: php-blog 
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: php
      SERVICE_TAGS: dev
    working_dir: /var/www/html
    volumes: # carpeta de proyecto local : carpeta del container que da vida a los archivos PHP
      - ./blog:/var/www/html
    ports:
      - 9000:80 # ya te la sabes ðŸ˜‰
    networks:
      - laravel # red

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - 9001:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST:mysql_db
      - MYSQL_USERNAME:root
      - MYSQL_ROOT_PASSWORD:root
    networks:
      - laravel # red

      
networks: # declaracion de la red
  laravel: